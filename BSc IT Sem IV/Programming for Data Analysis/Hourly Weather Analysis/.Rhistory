summarise(
mean_Temp = mean(temp, na.rm = TRUE),
mean_Dew_Point = mean(dewp, na.rm = TRUE)
)
avg_Temp
mean(weather_data$dewp)
# Data Mutation : Addition of a new column in imported dataset
weather_data = mutate(weather_data, snow =
if_else((month==3&day>=20)|month==4|month==5|(month==6&day<=19),"snow",
if_else((month==6&day>=20)|month==7|month==8|(month==9&day<=19),"partial snow",
if_else((month==9&day>=20)|month==10|month==11|(month==12&day<=19),"snow","no snow"))))
View(weather_data)
# Filtering Details
JFK <- filter(weather_data, origin == 'JFK')
LGA <- filter(weather_data, origin == 'LGA')
monthly_JFK <- group_by(JFK, month, day)
monthly_LGA <- group_by(LGA, month, day)
# Extra Feature 1 : Using hexagonal bins to demonstrate the relationship between pressure and wind speed
ggplot(avg_Humid, aes(x = pressure, y=wind_speed)) +
geom_hex(bins = 20) +
labs(x="Pressure", y="Wind Speed",
title = "Relationship between pressure and wind speed",
subtitle = "Using Hexbin") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
# Extra Feature 2 : Calculating average humid density per hour using density graph
ggplot(avg_Humid, aes(x=humid)) +
geom_density(color="coral", fill="beige") +
labs(title = "Density Graph",
x="Humidity", y="Density") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
# Loading Packages for their use ( Using "library()" or "require()" function)
library(ggplot2)
library(dplyr)
library(crayon)
library(forecast)
library(magrittr)
library(corrplot)
library(hexbin)
library(weathermetrics)
library(hexbin)
# Data Preprocessing : Temperature (temp) and Dewpoint (dewp)
# Temperature conversion from Fahrenheit to Celsius
weather_data$temp <- fahrenheit.to.celsius(weather_data$temp)
weather_data$dewp <- fahrenheit.to.celsius(weather_data$dewp)
# Data Preprocessing : Wind Direction (wind_dir)
avg_Wind_Dir <- mean(weather_data$wind_dir,
na.rm = TRUE)
weather_data$wind_dir <- ifelse(
is.na(weather_data$wind_dir),
avg_Wind_Dir,
weather_data$wind_dir)
sum(is.na(weather_data$wind_dir))
# Data Pre processing : Wind Speed (wind_speed)
avg_Wind_Speed <- mean(weather_data$wind_speed,
na.rm = TRUE)
weather_data$wind_speed <- ifelse(
is.na(weather_data$wind_speed),
avg_Wind_Speed,
weather_data$wind_speed)
sum(is.na(weather_data$wind_speed))
# Data Pre processing : Wind Gust (wind_gust)
weather_data$wind_gust <- ifelse(
is.na(weather_data$wind_gust),
0,
weather_data$wind_gust)
sum(is.na(weather_data$wind_gust))
avg_Wind_Gust <- weather_data %>%
group_by(origin, month) %>%
summarise(
avg_Temp = mean(temp),
wind_Gust_1 = mean(wind_gust, na.rm = TRUE)
)
avg_Wind_Gust
# Data Pre processing : Pressure (pressure)
avg_Pressure <- mean(weather_data$pressure, na.rm = TRUE)
weather_data$pressure <- ifelse(
is.na(weather_data$pressure),
avg_Pressure,
weather_data$pressure)
sum(is.na(weather_data$pressure))
# Data Pre processing : Mean Temperature and Mean Dew Point
avg_Temp <- weather_data %>%
group_by(origin, month) %>%
summarise(
mean_Temp = mean(temp, na.rm = TRUE),
mean_Dew_Point = mean(dewp, na.rm = TRUE)
)
avg_Temp
mean(weather_data$dewp)
# Data Mutation : Addition of a new column in imported dataset
weather_data = mutate(weather_data, snow =
if_else((month==3&day>=20)|month==4|month==5|(month==6&day<=19),"snow",
if_else((month==6&day>=20)|month==7|month==8|(month==9&day<=19),"partial snow",
if_else((month==9&day>=20)|month==10|month==11|(month==12&day<=19),"snow","no snow"))))
JFK <- filter(weather_data, origin == 'JFK')
LGA <- filter(weather_data, origin == 'LGA')
monthly_JFK <- group_by(JFK, month, day)
monthly_LGA <- group_by(LGA, month, day)
# Analysis Example 01 : Analyzing Dew Point against Humidity using Scatter plot
# Manipulation
weather_data %>%
summarise(dewp)
# Visualization
ggplot(data = weather_data, mapping = aes(x = dewp, y = humid, color = origin)) +
geom_point(alpha = 0.2) +
stat_smooth(method = "lm") +
labs(title = "Scatter plot between Dew Point against Humid", x = "Dew Point", y = "Humid") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example 2 : Analyzing snowfall based on the temperature with Boxplot
# Manipulation
weather_data %>%
group_by(snow) %>%
summarise(avg_temper = mean(temp),
max_temper = max(temp),
min_temper = min(temp),
.groups = 'drop')
# Visualization
ggplot(weather_data, aes(snow, temp, fill = snow)) +
geom_boxplot(aes(group = snow)) +
labs(title = "Snowfall Based on Temperature", y = "Temperature (In Celsius)") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example 3 : Analyzing Average Pressure at both airports for each month using Line Graph
# Data Manipulation
pressure_LGA <- weather_data %>%
filter(origin == "LGA") %>%
group_by(month) %>%
summarise(pressure = mean(pressure), origin, .groups = 'drop')
summary(pressure_LGA)
# Data Manipulation
pressure_JFK <- weather_data %>%
filter(origin == "JFK") %>%
group_by(month) %>%
summarise(pressure = mean(pressure), origin, .groups = 'drop')
summary(pressure_JFK)
# Visualization
ggplot() +
geom_line(data = pressure_LGA, aes(x = month, y = pressure, color = origin)) +
geom_line(data = pressure_JFK, aes(x = month, y = pressure, color = origin)) +
scale_x_continuous(breaks = 1:12, labels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec")) +
labs(title = "Pressure in LGA and JFK (by months)",
x = "Month", y = "Pressure (Pa)") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example 04 : Analyzing relation between Temperature and Wind Gust using Regression Equation Line
# Manipulation
avg_Wind_Gust <- weather_data %>%
group_by(origin, month) %>%
summarise(
avg_Temp = mean(temp),
wind_Gust_1 = mean(wind_gust, na.rm = TRUE)
)
avg_Wind_Gust
# Visualization
ggplot(avg_Wind_Gust, aes(x = avg_Temp, y = wind_Gust_1)) +
geom_point(color = 'red') +
geom_smooth(method = lm, formula = y ~ x, color = 'orchid', size = 1) +
labs(title = "Wind Gust and Temperature Regresssion Line",
x = "Temperature (In C)", y = "Wind Gust (In Mph)") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example 05 : Comparing Dewpoint per months for JFK and LGA using Bar Plot
# Manipulation
avg_Temp <- weather_data %>%
group_by(origin, month) %>%
summarise(
mean_Temp = mean(temp, na.rm = TRUE),
mean_Dew_Point = mean(dewp, na.rm = TRUE)
)
avg_Temp
View(avg_Temp)
# Visualization
ggplot(avg_Temp, aes(x = month, y = mean_Dew_Point, fill = origin)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
scale_fill_manual("origin", values = c("JFK" = "steel blue", "LGA" = "pink")) +
scale_x_continuous(breaks = 1:12,
labels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec")) +
labs(title = "Dewpoint of each month",
x = "Month", y = "Dewpoint (In F)") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4")) +
annotate("text", label = "Average Dew Point = -14.93Â°C", size = 4, x = 3, y = 3, color = "red")
# Analysis Example 06 : Analyzing Humidity distribution in Weather Data using histogram
# Manipulation
weather_data %>%
select(humid) %>%
summarise(humid)
# Visualization
ggplot(data = weather_data, mapping = aes(x = humid, fill = origin)) +
geom_histogram() +
labs(title = "Distribution of Humidity by Months", x = "Temperature") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4")) +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, size = 16)) +
facet_wrap(~month)
# Analysis Example 07 : Analyzing number of rainy days in both airports throughout the year
# Analyzing Rainy Days
jfk_rain=weather_data %>%
filter(humid==100, origin=="JFK") %>%
group_by(month) %>% #JFK
summarise(rain=n_distinct(day),origin,.groups='drop') #multiple rain in a day will be counted as once
lga_rain=weather_data %>%
filter(humid==100, origin=="LGA") %>%
group_by(month) %>% #LGA
summarise(rain=n_distinct(day),origin,.groups='drop') #multiple rain in a day will be counted as once
#-visualization
ggplot() +
geom_point(data=jfk_rain, aes(x = month, y = rain, color=origin),size=3) + #JFK plot
geom_point(data=lga_rain, aes(x = month, y = rain, color=origin),size=3) + #LGA plot
annotate("rect", xmin=3.6, xmax=6.6, ymin=1 , ymax=6, alpha=0.1, fill="green")+ #Summer time
scale_x_continuous(breaks=1:12,labels=c("jan","feb","mar","apr","may","jun",
"jul","aug","sep","oct","nov","dec"))+
scale_y_continuous(breaks=1:7) +
labs(title = "Number of Rainy Days in a Year", x="Month", y="Rainy Days") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
#Analysis Example 8 : Line Chart of Average Temperature by month in JFK and LGA
# Manipulation and Visualization
weather_data %>%
select(origin, month, temp) %>%
group_by(origin, month) %>%
summarise(avg_Temp = mean(temp)) %>%
ggplot(aes(x = month, y = avg_Temp, color = origin)) +
geom_point() +
geom_line() +
labs(title = 'Average Temperature by Month in JFK and LGA',
x = 'Month', y = 'Temperature (c)', color = 'Origin') +
theme(plot.title = element_text(hjust = 0.5, color = "deeppink")) +
scale_x_discrete(limits = month.abb) +
facet_wrap(~ origin, ncol = 1)
# Analysis Example 8 : Numerical and Graph Information
avg_Temp_JFK = summarise(monthly_JFK, avg_Temp = mean(temp))
avg_Temp_LGA = summarise(monthly_LGA, avg_Temp = mean(temp))
print(summarise(avg_Temp_JFK, highest_Temp = max(avg_Temp),
lowest_Temp = min(avg_Temp), avg_Temp = mean(avg_Temp)))
print(summarise(avg_Temp_LGA, highest_Temp = max(avg_Temp),
lowest_Temp = min(avg_Temp), avg_Temp = mean(avg_Temp)))
# Analysis Example 9 : Analyzing weather humidity according to Snowfall using bar plot
# The snow variable (column) is added later just to ...
#     demonstrate the data manipulation and visualization techniques.
# Therefore, results might not match the real life scenarios
#Manipulation
weather_data %>%
select(snow, humid) %>%
group_by(snow) %>%
summarise(avg_Humidity = mean(humid), .groups = 'drop')
# Visualization
ggplot(weather_data, aes(x=humid, y=frequency(humid), fill=factor(snow))) +
geom_bar(width = 0.20, stat = "identity") +
theme_bw() +
facet_wrap(~snow) +
labs(fill = "Snow", x="Humidity", y="Count",
title = "Humidity according to Snowfall", subtitle = "2013") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# For visibility
# The snow variable (column) is added later just to ...
#     demonstrate the data manipulation and visualization techniques.
# Therefore, results might not match the real life scenarios
weather_data %>%
select(snow, visib) %>%
group_by(snow) %>%
summarise(avg_Visib = mean(visib), .groups = 'drop')
ggplot(weather_data, aes(x=visib, y=frequency(visib), fill=factor(snow))) +
geom_bar(width = 0.20, stat = "identity") +
theme_bw() +
facet_wrap(~snow) +
labs(fill = "Snow", x="Visibility", y="Count",
title = "Visibility according to Snowfall", subtitle = "2013") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example 10 : Scatter plot (Jitter) to predict Snowfall
# For Snow (Considering below 0 degree of dew point as a snowing possibility)
# Manipulation and Visualization
weather_data %>%
filter(dewp<0) %>%
ggplot(aes(x=month, y=dewp, group=month, color=factor(month), na.omit())) +
geom_jitter() +
facet_wrap(~origin) +
scale_x_continuous(breaks = 1:12, labels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec")) +
labs(title = "Scatter plot (Jitter) to predict Snowfall",
subtitle = "Both JFK and LGA",
x = "Month", y = "Dew Point (C)") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
# Also, For Rain (Considering dew point less than 20 as a raining possibility)
# Manipulation and Visualization
weather_data %>%
filter(dewp<20) %>%
ggplot(aes(x=month, y=dewp, group=month, color=factor(month), na.omit())) +
geom_jitter() +
facet_wrap(~origin) +
scale_x_continuous(breaks = 1:12, labels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec")) +
labs(title = "Scatter plot (Jitter) to predict Snowfall",
subtitle = "Both JFK and LGA",
x = "Month", y = "Dew Point (C)") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
# Analysis Example 11 : Line chart to analyze airport visibility in JFK and LGA
# Manipulation and Visualization
weather_data %>%
select(origin, month, visib) %>%
group_by(origin, month) %>%
summarise(avg_Visib = mean(visib)) %>%
ggplot(aes(x = month, y = avg_Visib, color = origin)) +
geom_point() +
geom_line() +
labs(title = 'Airport Visibility in JFK and LGA',
x = 'Month', y = 'Visibility (in Mile)', color = 'Origin') +
theme(plot.title = element_text(size = 14, face = 'bold'),
legend.position = 'top') +
scale_x_discrete(limits = month.abb)
# Analysis Example 11 : Numerical and Graph Information
avg_Visib_JFK = summarise(monthly_JFK, avg_Visib = mean(visib))
avg_Visib_LGA = summarise(monthly_LGA, avg_Visib = mean(visib))
print(summarise(avg_Visib_JFK, highest_Visib = max(avg_Visib),
lowest_Visib = min(avg_Visib)))
print(summarise(avg_Visib_LGA, highest_Visib = max(avg_Visib),
lowest_Visib = min(avg_Visib),
avg_Visib = mean(avg_Visib)))
# Analysis Example 12 : Polar Bar Chart of Wind Direction Distribution in JFK and LGA
# Manipulation
weather_data %>%
select(origin, wind_dir) %>%
mutate(dir_EWNS =
ifelse(wind_dir > 0 & wind_dir <= 90, 'NE',
ifelse(wind_dir >90 & wind_dir <= 180, 'SE',
ifelse(wind_dir >180 & wind_dir <= 270, 'SW',
ifelse(wind_dir >270 & wind_dir <= 360, 'NW', 0 ))))) %>%
group_by(origin, dir_EWNS) %>%
summarise(count = sum(dir_EWNS == 'NE', dir_EWNS == 'SE',
dir_EWNS == 'SW', dir_EWNS == 'NW'))
# Visualization
ggplot(weather_data) +
geom_bar(aes(x = wind_dir)) +
coord_polar() +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 45)) +
labs(title = 'Distribution of Wind Direction (JFK and LGA)',
x = 'Degree of Wind Direction') +
theme(plot.tag = element_text(size = 14, face = bold)) +
facet_wrap(~ origin, nrow = 1) +
theme_classic()
# Analysis Example 12 : Numerical and Bar Chart Information
weather_data %>%
select(origin, wind_dir) %>%
mutate(dir_EWNS =
ifelse(wind_dir > 0 & wind_dir <= 90, 'NE',
ifelse(wind_dir >90 & wind_dir <= 180, 'SE',
ifelse(wind_dir >180 & wind_dir <= 270, 'SW',
ifelse(wind_dir >270 & wind_dir <= 360, 'NW', 0 ))))) %>%
group_by(origin, dir_EWNS) %>%
summarise(count = sum(dir_EWNS == 'NE', dir_EWNS == 'SE',
dir_EWNS == 'SW', dir_EWNS == 'NW'))
# Analysis Example 13 : Analyzing the effect of wind speed and wind direction
#                         towards flights at JFK airports
# Manipulation
wind_JFK <- weather_data %>%
filter(origin == "JFK") %>%
mutate(knot_speed = wind_speed/1.151,
headwind = knot_speed*cos(wind_dir-45)) %>%
select(month, knot_speed, wind_dir, headwind) %>%
filter(headwind >= 0)
wind_JFK %>%
group_by(month) %>%
summarise(avg_wind = mean(avg_wind),
max_wind = max(max_wind),
.groups = 'drop')
# Visualization
ggplot(wind_JFK, aes(month, headwind)) +
geom_boxplot(aes(group = month)) +
scale_x_continuous(breaks = 1:12, labels = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug",
"Sep", "Oct", "Nov", "Dec")) +
labs(x="Month", y="Headwind",
title = "Effect of wind speed and direction towards flight", subtitle = "2013") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis 14 : Analyzing humidity details in JFK and LGA using box plot
# Manipulation and Visualization
JFK <- filter(weather_data, origin == 'JFK')
LGA <- filter(weather_data, origin == 'LGA')
ggplot(rbind(JFK, LGA),
aes(x = origin, y = humid, fill = origin)) +
geom_boxplot(color = "steelblue") +
scale_fill_manual("origin",
values = c("JFK" = "coral", "LGA" = "pink")) +
labs(title = "Humidity Information in JFK and LGA in 2013",
x = 'Origin', y = 'Humidity Values') +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Extra Features
# Extra Feature 1 : Using hexagonal bins to demonstrate the relationship between pressure and wind speed
ggplot(avg_Humid, aes(x = pressure, y=wind_speed)) +
geom_hex(bins = 20) +
labs(x="Pressure", y="Wind Speed",
title = "Relationship between pressure and wind speed",
subtitle = "Using Hexbin") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
# Extra Feature 2 : Calculating average humid density per hour using density graph
ggplot(avg_Humid, aes(x=humid)) +
geom_density(color="coral", fill="beige") +
labs(title = "Density Graph",
x="Humidity", y="Density") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
# Analysis Example a : Analyzing Temperature against Pressure using Scatter Plot
# Manipulation
pressure_temper <- weather_data %>%
filter(origin) %>%
select(temp, pressure)
summary(pressure_temper)
#Visualization
ggplot(weather_data, aes(x = temp, y = pressure, color = origin, shape = origin)) +
geom_point() + theme_light() +
labs(title = 'Scatter plot of Temperature against Pressure',
x = 'Temperature (In Fahrenheit)',
y = 'Pressure (In Millibars)') +
geom_smooth(method = "lm", se = FALSE) +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = 'bold', color="deeppink1"))
cor(x = weather_data$temp, y = weather_data$pressure, use = "complete.obs")
# Manipulation
monthly_Humid_Visibility <- weather_data %>%
group_by(month) %>%
select(humid, visib)
# Visualization
ggplot(monthly_Humid_Visibility, aes(x = humid, y = visib)) +
geom_point() +
facet_wrap(~month) +
labs(title = "Relationship between Humidity and Visibility throughout the year",
x = "Humidity (g.kg-1)",
y = "Visibility (In Miles)") +
theme(plot.title = element_text(hjust = 0.5, color = "deeppink")) +
geom_smooth(method = "lm", color = "red") +
theme(plot.title = element_text(size = 14, face = 'bold'))
cor(x = weather_data$humid, y = weather_data$visib, use = "complete.obs")
# Analysis Example c : Box-plot of WIND SPEED AGAINST MONTH
# Manipulation
monthly_WSpeed <- weather_data %>%
group_by(month)
summary(monthly_WSpeed)
# Visualization
ggplot(data = monthly_WSpeed, mapping = aes(x = factor(month),
y = wind_speed,
na.rm = TRUE,
color = origin)) +
geom_boxplot(alpha = 0.8) +
labs(title = "Box-plot of Wind Speed against Month",
x = "Month",
y = "Wind Speed (Mph)") +
facet_wrap(~origin) +
scale_fill_brewer(palette = "Greens", name = "Origin") +
theme(plot.title = element_text(hjust = 0.5,
size = 20),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
panel.background = element_rect(fill = "Pink"),
axis.text = element_blank(),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18))
# Analysis Example d : Analyzing daily mean and median for average JFK Temperature
# Manipulation
temp_JFK <- filter(weather_data, origin == 'JFK')
#Visualization
ggplot(temp_JFK, aes(temp)) +
geom_histogram(binwidth = 1, fill = "mediumorchid", color = "white") +
geom_vline(xintercept = mean(temp_JFK$temp), linetype = 'dashed', size = 1, color = 'gold') +
geom_vline(xintercept = median(temp_JFK$temp), linetype = 'dashed', size = 1, color = 'green') +
labs(title = "Histogram for daily average temperature",
x = "Temperature (In Celcius)",
y = "Days") +
theme(plot.title = element_text(hjust = 0.5, size = 16)) +
annotate("text", label = "Mean = 54.47", size = 4, x = -30, y = 950, color = "red") +
annotate("text", label = "Median = 53.96", size = 4, x = -30, y = 900, color = "red")
# Analysis Example d : Analyzing relationship between dew point and wind gust
#               during full snowy days using Scatter plot
# Manipulation
snow_gust <- weather_data %>%
filter(snow == "snow") %>%
select(dewp, wind_gust)
summary(snow_gust)
# Visualization
ggplot(snow_gust, aes(dewp, wind_gust)) +
geom_point(na.rm = TRUE) +
stat_smooth(method = "lm") +
labs(title = "Relationship between Dew Point and Wind Gust",
subtitle = "Full Snow Days",
x = "Dew Point", y = "Wind Gust") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example e : Analyzing weather visibility according to Snowfall
# The snow variable (column) is added later just to ...
#     demonstrate the data manipulation and visualization techniques.
# Therefore, results might not match the real life scenarios
weather_data %>%
select(snow, visib) %>%
group_by(snow) %>%
summarise(avg_Visib = mean(visib), .groups = 'drop')
ggplot(weather_data, aes(x=visib, y=frequency(visib), fill=factor(snow))) +
geom_bar(width = 0.20, stat = "identity") +
theme_bw() +
facet_wrap(~snow) +
labs(fill = "Snow", x="Visibility", y="Count",
title = "Visibility according to Snowfall", subtitle = "2013") +
theme(plot.title = element_text(hjust = 0.5, size = 16, color = "deeppink4"))
# Analysis Example e : Analyzing relationship between temperature and dew point
#-manipulation
#--check the correlation between temperature and dew point
cor(weather_data$temp,weather_data$dewp)
#-visualization
ggplot(weather_data,aes(dewp,temp))+
geom_jitter()+
facet_wrap(~origin)+
geom_smooth(method="lm")+
labs(x="Temperature (F)", y="Dew Point",
title = "Correlation Between Temperature and Dew Point", subtitle = "2013") +
theme(plot.title = element_text(hjust = 0.5, size = 26, color = "deeppink4"))
