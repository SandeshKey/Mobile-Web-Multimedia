{
    "type": [
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.1.1 (2021-08-10) -- \"Kick Things\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[Workspace loaded from ~/Desktop/Hourly Weather Analysis/.RData]\n\n",
        "> ",
        "JFK <- filter(weather_data, origin == 'JFK')",
        "Error in filter(weather_data, origin == \"JFK\") : \n  object 'origin' not found\n",
        "> ",
        "library(ggplot2)",
        "Need help? Try Stackoverflow: https://stackoverflow.com/tags/ggplot2\n",
        "> ",
        "library(dplyr)",
        "\nAttaching package: ‘dplyr’\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n",
        "The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "library(crayon)",
        "\nAttaching package: ‘crayon’\n\n",
        "The following object is masked from ‘package:ggplot2’:\n\n    %+%\n\n",
        "> ",
        "library(forecast)",
        "Registered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n",
        "This is forecast 8.16 \n  Want to stay up-to-date? Read the Hyndsight blog:\n  https://robjhyndman.com/hyndsight/\n",
        "Warning message:\n",
        "package ‘forecast’ was built under R version 4.1.2 \n",
        "> ",
        "library(magrittr)",
        "Warning message:\n",
        "package ‘magrittr’ was built under R version 4.1.2 \n",
        "> ",
        "library(corrplot)",
        "corrplot 0.92 loaded\n",
        "> ",
        "library(hexbin)",
        "> ",
        "library(weathermetrics)",
        "> ",
        "JFK <- filter(weather_data, origin == 'JFK')",
        "> ",
        "LGA <- filter(weather_data, origin == 'LGA')",
        "> ",
        "monthly_JFK <- group_by(JFK, month, day)",
        "> ",
        "JFK <- filter(weather_data, origin == 'JFK')",
        "> ",
        "LGA <- filter(weather_data, origin == 'LGA')",
        "> ",
        "monthly_JFK <- group_by(JFK, month, day)",
        "> ",
        "monthly_LGA <- group_by(LGA, month, day)",
        "> ",
        "# Numerical Data of Analysis 1 (Graph Details)",
        "> ",
        "avg_Temp_JFK <- summarise(monthly_JFK, avg_Temp_JFK = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "avg_Temp_LGA <- summarise(monthly_LGA, avg_Temp_LGA = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "print(summarise(avg_Temp_JFK, highest_Temp = max(avg_Temp),",
        "+ ",
        "                lowest_Temp = min(avg_Temp), avg_Temp = mean(avg_Temp)))",
        "Error: Problem with `summarise()` column `highest_Temp`.\n\u001B[34mℹ\u001B[39m `highest_Temp = max(avg_Temp)`.\n\u001B[31mx\u001B[39m object 'avg_Temp' not found\n\u001B[34mℹ\u001B[39m The error occurred in group 1: month = 1.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "print(summarise(avg_Temp_JFK, highest_Temp = max(avg_Temp),",
        "+ ",
        "                lowest_Temp = min(avg_Temp), avg_Temp = mean(avg_Temp)))",
        "Error: Problem with `summarise()` column `highest_Temp`.\n\u001B[34mℹ\u001B[39m `highest_Temp = max(avg_Temp)`.\n\u001B[31mx\u001B[39m object 'avg_Temp' not found\n\u001B[34mℹ\u001B[39m The error occurred in group 1: month = 1.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "weather_data %>%",
        "+ ",
        "  select(origin, month, temp) %>% ",
        "+ ",
        "  group_by(origin, month) %>% ",
        "+ ",
        "  summarise(avgTemp = mean(temp)) %>% ",
        "+ ",
        "  ggplot(aes(x = month, y = avgTemp, color = origin)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  labs(title = 'Average Temp. by Month in JFK and LGA', x = 'Month', y = 'Temperature (c)', color = 'Origin') +",
        "+ ",
        "  theme(plot.title = element_text(size = 14, face = 'bold'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  scale_x_discrete(limits = month.abb) +",
        "+ ",
        "  facet_wrap(~ origin, ncol = 1)",
        "`summarise()` has grouped output by 'origin'. You can override using the `.groups` argument.\n",
        "> ",
        "avg_Temp_JFK <- summarise(monthly_JFK, avg_Temp_JFK = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "avg_Temp_LGA <- summarise(monthly_LGA, avg_Temp_LGA = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "print(summarise(avg_Temp_JFK, highest_Temp = max(avg_Temp),",
        "+ ",
        "                lowest_Temp = min(avg_Temp), avg_Temp = mean(avg_Temp)))",
        "Error: Problem with `summarise()` column `highest_Temp`.\n\u001B[34mℹ\u001B[39m `highest_Temp = max(avg_Temp)`.\n\u001B[31mx\u001B[39m object 'avg_Temp' not found\n\u001B[34mℹ\u001B[39m The error occurred in group 1: month = 1.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "sum(is.na(weather_data$origin))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$year))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$month))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$day))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$hour))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$temp))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$dewp))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$humid))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$wind_dir))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$wind_speed))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$wind_gust))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$precip))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$pressure))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$visib))",
        "[1] 0\n",
        "> ",
        "sum(is.na(weather_data$time_hour))",
        "[1] 0\n",
        "> ",
        "weather_data$temp <- fahrenheit.to.celsius(weather_data$temp)",
        "> ",
        "weather_data$dewp <- fahrenheit.to.celsius(weather_data$dewp)",
        "> ",
        "avg_Wind_Dir <- mean(weather_data$wind_dir,",
        "+ ",
        "                     na.rm = TRUE)",
        "> ",
        "weather_data$wind_dir <- ifelse(",
        "+ ",
        "  is.na(weather_data$wind_dir),",
        "+ ",
        "  avg_Wind_Dir,",
        "+ ",
        "  weather_data$wind_dir)",
        "> ",
        "sum(is.na(weather_data$wind_dir))",
        "[1] 0\n",
        "> ",
        "avg_Wind_Speed <- mean(weather_data$wind_speed,",
        "+ ",
        "                       na.rm = TRUE)",
        "> ",
        "weather_data$wind_speed <- ifelse(",
        "+ ",
        "  is.na(weather_data$wind_speed),",
        "+ ",
        "  avg_Wind_Speed,",
        "+ ",
        "  weather_data$wind_speed)",
        "> ",
        "sum(is.na(weather_data$wind_speed))",
        "[1] 0\n",
        "> ",
        "weather_data$wind_gust <- ifelse(",
        "+ ",
        "  is.na(weather_data$wind_gust),",
        "+ ",
        "  0,",
        "+ ",
        "  weather_data$wind_gust)",
        "> ",
        "sum(is.na(weather_data$wind_gust))",
        "[1] 0\n",
        "> ",
        "avg_Pressure <- mean(weather_data$pressure, na.rm = TRUE)",
        "> ",
        "weather_data$pressure <- ifelse(",
        "+ ",
        "  is.na(weather_data$pressure),",
        "+ ",
        "  avg_Pressure,",
        "+ ",
        "  weather_data$pressure)",
        "> ",
        "sum(is.na(weather_data$pressure))",
        "[1] 0\n",
        "> ",
        "JFK <- filter(weather_data, origin == 'JFK')",
        "> ",
        "LGA <- filter(weather_data, origin == 'LGA')",
        "> ",
        "monthly_JFK <- group_by(JFK, month, day)",
        "> ",
        "monthly_LGA <- group_by(LGA, month, day)",
        "> ",
        "weather_data %>%",
        "+ ",
        "  select(origin, month, temp) %>% ",
        "+ ",
        "  group_by(origin, month) %>% ",
        "+ ",
        "  summarise(avgTemp = mean(temp)) %>% ",
        "+ ",
        "  ggplot(aes(x = month, y = avgTemp, color = origin)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  labs(title = 'Average Temp. by Month in JFK and LGA', x = 'Month', y = 'Temperature (c)', color = 'Origin') +",
        "+ ",
        "  theme(plot.title = element_text(size = 14, face = 'bold'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  scale_x_discrete(limits = month.abb) +",
        "+ ",
        "  facet_wrap(~ origin, ncol = 1)",
        "`summarise()` has grouped output by 'origin'. You can override using the `.groups` argument.\n",
        "> ",
        "avg_Temp_JFK <- summarise(monthly_JFK, avg_Temp = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "avg_Temp_JFK <- .groups(monthly_JFK, avg_Temp = mean(temp))",
        "Error in .groups(monthly_JFK, avg_Temp = mean(temp)) : \n  could not find function \".groups\"\n",
        "> ",
        "avg_Temp_JFK <- summarise(monthly_JFK, avg_Temp = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "weather_data %>%",
        "+ ",
        "  select(origin, month, temp) %>% ",
        "+ ",
        "  group_by(origin, month) %>% ",
        "+ ",
        "  summarise(avgTemp = mean(temp)) %>% ",
        "+ ",
        "  ggplot(aes(x = month, y = avgTemp, color = origin)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  labs(title = 'Average Temp. by Month in JFK and LGA', x = 'Month', y = 'Temperature (c)', color = 'Origin') +",
        "+ ",
        "  theme(plot.title = element_text(size = 14, face = 'bold'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  scale_x_discrete(limits = month.abb) +",
        "+ ",
        "  facet_wrap(~ origin, ncol = 1)",
        "`summarise()` has grouped output by 'origin'. You can override using the `.groups` argument.\n",
        "> ",
        "weather_data %>%",
        "+ ",
        "  select(origin, month, temp) %>% ",
        "+ ",
        "  group_by(origin, month) %>% ",
        "+ ",
        "  summarise(avg_Temp = mean(temp)) %>% ",
        "+ ",
        "  ggplot(aes(x = month, y = avg_Temp, color = origin)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  labs(title = 'Average Temp. by Month in JFK and LGA', x = 'Month', y = 'Temperature (c)', color = 'Origin') +",
        "+ ",
        "  theme(plot.title = element_text(size = 14, face = 'bold'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  scale_x_discrete(limits = month.abb) +",
        "+ ",
        "  facet_wrap(~ origin, ncol = 1)",
        "`summarise()` has grouped output by 'origin'. You can override using the `.groups` argument.\n",
        "> ",
        "avg_Temp_JFK <- summarise(monthly_JFK, avg_Temp = mean(temp))",
        "`summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\n",
        "> ",
        "# Setting up the Working Directory",
        "> ",
        "",
        "> ",
        "setwd(\"/Users/sandeshkey/Desktop/Hourly Weather Analysis\")",
        "> ",
        "getwd()",
        "[1] \"/Users/sandeshkey/Desktop/Hourly Weather Analysis\"\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Importing Data (CSV File : Hourly Weather Data)",
        "> ",
        "",
        "> ",
        "weather_data <- read.csv(\"Hourly Weather Data.csv\")",
        "> ",
        "",
        "> ",
        "head(weather_data) #Displays top 6 rows from the data",
        "  origin year month day hour  temp  dewp humid wind_dir wind_speed wind_gust precip pressure visib        time_hour\n1    JFK 2013     1   1    1 39.02 26.06 59.37      260   12.65858        NA      0   1012.6    10 01/01/2013 01:00\n2    JFK 2013     1   1    2 39.02 26.06 59.37      270   11.50780        NA      0   1012.4    10 01/01/2013 02:00\n3    JFK 2013     1   1    3 39.92 26.96 59.50      260   14.96014        NA      0   1012.7    10 01/01/2013 03:00\n4    JFK 2013     1   1    4 39.92 28.04 62.21      250",
        "   17.26170        NA      0   1012.6    10 01/01/2013 04:00\n5    JFK 2013     1   1    5 39.02 26.96 61.63      260   14.96014        NA      0   1012.1    10 01/01/2013 05:00\n6    JFK 2013     1   1    6 37.94 26.96 64.29      260   13.80936        NA      0   1012.6    10 01/01/2013 06:00\n",
        "> ",
        "tail(weather_data) #Displays bottom 6 rows from the data",
        "      origin year month day hour  temp  dewp humid wind_dir wind_speed wind_gust precip pressure visib        time_hour\n17407    LGA 2013    12  30   13 37.04 21.92 53.97      340   17.26170  20.71404      0   1016.5    10 30/12/2013 13:00\n17408    LGA 2013    12  30   14 35.96 19.94 51.78      340   13.80936  21.86482      0   1017.1    10 30/12/2013 14:00\n17409    LGA 2013    12  30   15 33.98 17.06 49.51      330   17.26170  21.86482      0   1018.8    10 30/12/2013 15:00\n17410    LGA 2013    12  30   16",
        " 32.00 15.08 49.19      340   14.96014  23.01560      0   1019.5    10 30/12/2013 16:00\n17411    LGA 2013    12  30   17 30.92 12.92 46.74      320   17.26170        NA      0   1019.9    10 30/12/2013 17:00\n17412    LGA 2013    12  30   18 28.94 10.94 46.41      330   18.41248        NA      0   1020.9    10 30/12/2013 18:00\n",
        "> ",
        "View(weather_data) #Displays entire data in a spreadsheet",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Installing Packages",
        "> ",
        "",
        "> ",
        "install.packages(\"ggplot2\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"crayon\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"forecast\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"magrittr\") # For Pipe Operator",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"corrplot\") #Unused Yet",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"hexbin\") # Unused Yet",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"weathermetrics\") # Used in preprocessing temp and dewp",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Loading Packages for their use ( Using \"library()\" or \"require()\" function)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(crayon)",
        "> ",
        "library(forecast)",
        "> ",
        "library(magrittr)",
        "> ",
        "library(corrplot)",
        "> ",
        "library(hexbin)",
        "> ",
        "library(weathermetrics)",
        "> ",
        "",
        "> ",
        "summary(weather_data)",
        "    origin               year          month             day             hour            temp            dewp      \n Length:17412       Min.   :2013   Min.   : 1.000   Min.   : 1.00   Min.   : 0.00   Min.   :12.02   Min.   :-9.94  \n Class :character   1st Qu.:2013   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 6.00   1st Qu.:39.92   1st Qu.:26.06  \n Mode  :character   Median :2013   Median : 7.000   Median :16.00   Median :11.00   Median :55.04   Median :42.08  \n                    Mean   :2013   Mean   : 6.504  ",
        " Mean   :15.68   Mean   :11.49   Mean   :55.12   Mean   :41.23  \n                    3rd Qu.:2013   3rd Qu.: 9.000   3rd Qu.:23.00   3rd Qu.:17.00   3rd Qu.:69.98   3rd Qu.:57.02  \n                    Max.   :2013   Max.   :12.000   Max.   :31.00   Max.   :23.00   Max.   :98.96   Max.   :78.08  \n                                                                                                                   \n     humid           wind_dir       wind_speed       wind_gust         precip            pressure     ",
        "     visib       \n Min.   : 12.74   Min.   :  0.0   Min.   : 0.000   Min.   :16.11   Min.   :0.000000   Min.   : 983.8   Min.   : 0.000  \n 1st Qu.: 46.85   1st Qu.:120.0   1st Qu.: 6.905   1st Qu.:21.86   1st Qu.:0.000000   1st Qu.:1012.9   1st Qu.:10.000  \n Median : 61.15   Median :220.0   Median :10.357   Median :25.32   Median :0.000000   Median :1017.7   Median :10.000  \n Mean   : 62.26   Mean   :201.9   Mean   :11.046   Mean   :26.18   Mean   :0.004183   Mean   :1017.9   Mean   : 9.245  \n 3rd Qu.: 78.66  ",
        " 3rd Qu.:300.0   3rd Qu.:14.960   3rd Qu.:29.92   3rd Qu.:0.000000   3rd Qu.:1023.1   3rd Qu.:10.000  \n Max.   :100.00   Max.   :360.0   Max.   :42.579   Max.   :66.75   Max.   :0.820000   Max.   :1042.1   Max.   :10.000  \n                  NA's   :204     NA's   :3        NA's   :13877                      NA's   :1794                     \n  time_hour        \n Length:17412      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n",
        "> ",
        "",
        "> ",
        "weather_data %>% ",
        "+ ",
        "  select(temp) %>% ",
        "+ ",
        "  count(temp) %>% ",
        "+ ",
        "  arrange(desc(n)) %>% ",
        "+ ",
        "  View()",
        "\nRestarting R session...\n\n"
    ]
}